FROM nvidia/cuda:12.2.2-cudnn8-devel-ubuntu20.04

WORKDIR /workspace

# Install necessary packages
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    build-essential \
    curl \
    git \
    wget \
    vim \
    gcc \
    openssl \
    nginx \
    && rm -rf /var/lib/apt/lists/* \
    && curl -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh \
    && bash /tmp/miniconda.sh -bfp /usr/local \
    && rm -rf /tmp/miniconda.sh \
    && conda install -y python=3.11 ipykernel python-graphviz \
    && conda update conda \
    && conda clean --all --yes

# Install VSCode
RUN curl -fsSL https://code-server.dev/install.sh | sh

RUN code-server --install-extension ms-python.python && \
    code-server --install-extension ms-toolsai.jupyter

RUN echo "root:root" | chpasswd

### Create SSL certificate (For HTTPS)
RUN openssl genrsa -out /etc/ssl/private/tmp-ssl.key 2048 && \
    openssl rsa -in /etc/ssl/private/tmp-ssl.key -out /etc/ssl/private/cert.key && \
    openssl req -new -key /etc/ssl/private/cert.key -out /etc/ssl/certs/cert.csr && \
    openssl x509 -req -days 365 -in /etc/ssl/certs/cert.csr -signkey /etc/ssl/private/cert.key -out /etc/ssl/certs/cert.crt && \
    rm /etc/ssl/certs/cert.csr && \
    rm /etc/ssl/private/tmp-ssl.key


# Configure Nginx to listen on 8080
RUN echo "server {" > /etc/nginx/conf.d/default.conf && \
echo "    listen 443 ssl;" >> /etc/nginx/conf.d/default.conf && \
echo "    server_name localhost;" >> /etc/nginx/conf.d/default.conf && \
echo "    ssl_certificate /etc/ssl/certs/cert.crt;" >> /etc/nginx/conf.d/default.conf && \
echo "    ssl_certificate_key /etc/ssl/private/cert.key;" >> /etc/nginx/conf.d/default.conf && \
echo "    location / {" >> /etc/nginx/conf.d/default.conf && \
echo "        proxy_pass http://localhost:8080;" >> /etc/nginx/conf.d/default.conf && \
echo "        proxy_set_header Host $host;" >> /etc/nginx/conf.d/default.conf && \
echo "        proxy_set_header Upgrade $http_upgrade;" >> /etc/nginx/conf.d/default.conf && \
echo "        proxy_set_header Connection upgrade;" >> /etc/nginx/conf.d/default.conf && \
echo "        proxy_set_header Accept-Encoding gzip;" >> /etc/nginx/conf.d/default.conf && \
echo "    }" >> /etc/nginx/conf.d/default.conf && \
echo "}" >> /etc/nginx/conf.d/default.conf

RUN mkdir -p ~/.config/code-server && \
    echo "password: root" > ~/.config/code-server/config.yaml && \
    echo "bind-addr: 0.0.0.0:8080" >> ~/.config/code-server/config.yaml && \
    echo "cert: /etc/ssl/certs/cert.crt" >> ~/.config/code-server/config.yaml && \
    echo "cert-key: /etc/ssl/private/cert.key" >> ~/.config/code-server/config.yaml

EXPOSE 8080

RUN rm -rf /workspace/*

CMD service nginx start && code-server .